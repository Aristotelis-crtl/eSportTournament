@page
@model eSportTournament.Pages.Competitions.ChampionnatEquipeModel

@{
    ViewData["Title"] = "ChampionnatEquipe";
    bool showMessage = false;
}

<h4>Ajouter les équipes au championnant</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Competition.ID" />
            <div class="form-group">
                <label asp-for="Competition.nomCompetition" class="control-label"></label>
                <input asp-for="Competition.nomCompetition" class="form-control" />
                <span asp-validation-for="Competition.nomCompetition" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Competition.terminer" /> @Html.DisplayNameFor(model => model.Competition.terminer)
                </label>
            </div>
            <label class="control-label">Equipes</label>
            <select multiple id="mySelect" class="selectpicker" asp-items="ViewBag.TEAMS" asp-for="@Model.SelectedTeams" onchange="getComboA(this)" title="Choississez des équipes"></select>
          
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>

    <a asp-page="./Index">Retour à la liste</a>
</div>

@section Scripts {
    <script>
        function getComboA(selectObject) {
            var value = selectObject.length;
            console.log($(":selected", selectObject).length);
            if ($(":selected", selectObject).length == @Model.Competition.nombreJoueurs) {
                document.querySelector('.dropdown-menu').remove();
                
                alert("Nombre de joueurs limite atteint.");
            }
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
